/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TilePalettePanel.java
 *
 * Created on 27-apr-2009, 20.16.07
 */
package org.easyway.ueditor2.tileEditor;

import java.awt.Component;
import java.awt.Image;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import org.easyway.ueditor2.TextureManagerDialog;
import org.easyway.interfaces.base.ITexture;
import org.easyway.objects.texture.Texture;
import org.easyway.system.Core;
import org.easyway.tiles.Tile;
import org.easyway.tiles.TileSet;

/**
 *
 * @author Daniele
 */
public class TilePalettePanel extends javax.swing.JPanel {

    DefaultListModel listModel = new DefaultListModel();

    /** Creates new form TilePalettePanel */
    public TilePalettePanel(TileSet tileSet) {
        initComponents();
        list.setCellRenderer(new TileRenderer());

        list.setModel(listModel);
        listModel.addElement(new Object(){

            @Override
            public String toString() {
                return "REMOVE TILE";
            }
        });
        for (Tile tile : tileSet.getTileList()) {
            listModel.addElement(tile);
        }
        list.repaint();

    }

    public Tile getSelectedTile() {
        return list.getSelectedIndex() > 0 ? (Tile)list.getSelectedValue() : null;
    }

    public class TileRenderer extends DefaultListCellRenderer {

        protected Image getImage(Texture texture) {
            Image image = null;
            InputStream is = null;
            try {
                String texturePath = texture.getTextureId().getPathFileName();
                if (texturePath != null) {
                    is = Thread.currentThread().getContextClassLoader().getResource(texturePath).openStream();
                    if (is != null) {
                        image = ImageIO.read(is);
                    }
                }
            } catch (IOException ex) {
                Logger.getLogger(TextureManagerDialog.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    is.close();
                } catch (IOException ex) {
                    Logger.getLogger(TextureManagerDialog.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            return image;
        }

        @Override
        public Component getListCellRendererComponent(JList list, Object value,
                int index, boolean isSelected, boolean hasFocus) {
            JLabel label = (JLabel) super.getListCellRendererComponent(list, value,
                    index, isSelected, hasFocus);
            if (value instanceof Tile) {
                Tile tile = (Tile) value;
                ITexture itexture = tile.getImage();

                if (itexture instanceof Texture) {
                    Texture texture = (Texture) itexture;
                    //ImageIcon icon = new ImageIcon(texture.getTextureId().getPathFileName());
                    ImageIcon icon = new ImageIcon(getImage(texture));

                    label.setIcon(icon);
                }
            } else {
                label.setIcon(null);
            }
            return label;
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList();

        jScrollPane1.setViewportView(list);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 599, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList list;
    // End of variables declaration//GEN-END:variables
}
