/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TextureManagerDialog.java
 *
 * Created on 24-apr-2009, 13.27.08
 */
package org.easyway.ueditor2;

import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JColorChooser;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import org.easyway.ueditor2.effects.Effect;
import org.easyway.interfaces.base.ITexture;
import org.easyway.objects.sprites2D.Mask;
import org.easyway.objects.texture.Texture;
import org.easyway.system.StaticRef;
import org.easyway.utils.ImageUtils;

/**
 *
 * @author Daniele
 */
public class TextureManagerDialog extends javax.swing.JDialog {

    ITexture selectedTexture = null;

    /** Creates new form TextureManagerDialog */
    public TextureManagerDialog(boolean shouldSelectTexture) {
        super(EditorCore.getMainFrame(), true);
        initComponents();
        initialize();
        selectTextureButton.setVisible(shouldSelectTexture);
    }

    public void initialize() {

        final ArrayList<ITexture> textures = StaticRef.textures;
        DefaultListModel model = new DefaultListModel();
        if (filter.getText().length() == 0) {
            for (ITexture texture : textures) {
                model.addElement(texture);
            }
        } else {
            String vfilter = filter.getText();
            for (ITexture texture : textures) {
                if (texture.toString().toUpperCase().contains(vfilter.toUpperCase())) {
                    model.addElement(texture);
                }
            }
        }

        textureList.setModel(model);
        textureList.repaint();

    }

    public ITexture getSelectedTexture() {
        return selectedTexture;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        alphaColorPoupUp = new javax.swing.JPopupMenu();
        fromRGB = new javax.swing.JMenuItem();
        fromClick = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        filter = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        textureList = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        selectTextureButton = new javax.swing.JButton();
        applyButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        collisionable = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        startXSpinner = new javax.swing.JSpinner();
        endXSpinner = new javax.swing.JSpinner();
        startYSpinner = new javax.swing.JSpinner();
        endYSpinner = new javax.swing.JSpinner();
        jButton4 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        texturePreview = new org.easyway.ueditor2.forms.TexturePreview();

        fromRGB.setText("Color Picker");
        fromRGB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromRGBActionPerformed(evt);
            }
        });
        alphaColorPoupUp.add(fromRGB);

        fromClick.setText("Select from image");
        alphaColorPoupUp.add(fromClick);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Texture Manager");

        jLabel1.setText("Texture List");

        jLabel2.setText("Filter:");

        filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterActionPerformed(evt);
            }
        });

        textureList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        textureList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                textureListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(textureList);

        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Clone");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("New..");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        selectTextureButton.setText("Select");
        selectTextureButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectTextureButtonActionPerformed(evt);
            }
        });

        applyButton.setText("Apply");
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Texture Information"));

        collisionable.setText("Is collisionable");
        collisionable.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                collisionableItemStateChanged(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("X");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Y");

        jLabel5.setText("Start");

        jLabel6.setText("End");

        startXSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        startXSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                xyStartEndChanged(evt);
            }
        });

        endXSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        endXSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                xyStartEndChanged(evt);
            }
        });

        startYSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(0), null, Integer.valueOf(1)));
        startYSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                xyStartEndChanged(evt);
            }
        });

        endYSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(0), null, Integer.valueOf(1)));
        endYSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                xyStartEndChanged(evt);
            }
        });

        jButton4.setText("create alpha color");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel7.setText("Name:");

        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });
        nameField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                nameFieldPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addContainerGap(130, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(collisionable)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(endXSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                                            .addComponent(startXSpinner)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(endYSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                                    .addComponent(startYSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(90, 90, 90))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameField, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(collisionable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(startXSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(startYSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(endXSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(endYSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4)))
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addContainerGap())
        );

        javax.swing.GroupLayout texturePreviewLayout = new javax.swing.GroupLayout(texturePreview);
        texturePreview.setLayout(texturePreviewLayout);
        texturePreviewLayout.setHorizontalGroup(
            texturePreviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 256, Short.MAX_VALUE)
        );
        texturePreviewLayout.setVerticalGroup(
            texturePreviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 256, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(filter, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(selectTextureButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66))
                            .addComponent(applyButton, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE))
                                .addGap(161, 161, 161)))
                        .addComponent(texturePreview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(applyButton))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(texturePreview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(selectTextureButton)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filterActionPerformed

    private void textureListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_textureListValueChanged
        ITexture itexture = (ITexture) textureList.getSelectedValue();
        if (itexture == null) {
            collisionable.setSelected(false);
            collisionable.setEnabled(false);
            nameField.setText("");
            nameField.setEditable(false);
            return;
        }

        collisionable.setEnabled(true);
        collisionable.setSelected(itexture.getMask() != null);

        final int width = itexture.getWidthHW();
        final int height = itexture.getHeightHW();
        final int xs = (int) (itexture.getXStart() * width);
        final int xe = (int) (itexture.getXEnd() * width);
        final int ys = (int) (itexture.getYStart() * height);
        final int ye = (int) (itexture.getYEnd() * height);
        startXSpinner.setValue(xs);
        startYSpinner.setValue(ys);
        endXSpinner.setValue(xe);
        endYSpinner.setValue(ye);

        ((SpinnerNumberModel) startXSpinner.getModel()).setMaximum(width - 1);
        ((SpinnerNumberModel) startYSpinner.getModel()).setMaximum(height - 1);
        ((SpinnerNumberModel) endXSpinner.getModel()).setMaximum(width);
        ((SpinnerNumberModel) endYSpinner.getModel()).setMaximum(height);


        if (itexture instanceof Texture) {

            InputStream is = null;
            try {
                Texture texture = (Texture) itexture;
                nameField.setEditable(true);
                nameField.setText(texture.getName());
                if (texture.getTextureId() == null) {
                    return;
                }
                String texturePath = texture.getTextureId().getPathFileName();
                if (texturePath != null) {
                    URL url = Thread.currentThread().getContextClassLoader().getResource(texturePath);
                    if (url == null) {
                        return;
                    }
                    is = url.openStream();
                    if (is != null) {
                        Image image = ImageIO.read(is);
                        texturePreview.setImage(image, itexture);
                    }
                }
            } catch (IOException ex) {
                // Logger.getLogger(TextureManagerDialog.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    if (is != null) {
                        is.close();
                    }
                } catch (IOException ex) {
                    // Logger.getLogger(TextureManagerDialog.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }//GEN-LAST:event_textureListValueChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        final ITexture itexture = (ITexture) textureList.getSelectedValue();
        if (itexture instanceof Texture) {
            new Texture((Texture) itexture);
            initialize();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void selectTextureButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectTextureButtonActionPerformed
        if (textureList.getSelectedValue() == null) {
            return;
        }

        selectedTexture = (ITexture) textureList.getSelectedValue();
        dispose();
    }//GEN-LAST:event_selectTextureButtonActionPerformed

    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButtonActionPerformed
        initialize();
    }//GEN-LAST:event_applyButtonActionPerformed

    class TextureLoader extends Effect {

        Texture texture;
        String imagePath;

        public TextureLoader(String path) {
            imagePath = path;
        }

        public Texture getTexture() {
            return texture;
        }
        

        @Override
        public void loop() {
            texture = Texture.getTexture(imagePath);
            destroy();
        }
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String path = JOptionPane.showInputDialog(EditorCore.getMainFrame(), "Write the path of the image to load..\nExample: images/red.bmp");
        if (path == null) {
            return;
        }
        if (path.startsWith("/")) {
            path = path.substring(1);
        }
        final TextureLoader textureLoader = new TextureLoader(path);
        while (!textureLoader.isDestroyed()) {
            Thread.yield();
        }
        if (textureLoader.getTexture() == null) {
            JOptionPane.showMessageDialog(EditorCore.getMainFrame(), "Image: " + path + " not found!", "WARNING", JOptionPane.WARNING_MESSAGE);
        } else {
            initialize();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void collisionableItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_collisionableItemStateChanged
        final ITexture itexture = (ITexture) textureList.getSelectedValue();
        if (itexture == null) {
            return;
        }
        if (collisionable.isSelected()) {
            if (itexture.getMask() == null) {
                textureList.setEnabled(false);
                collisionable.setEnabled(false);
                new Effect() {

                    @Override
                    public void loop() {
                        new Mask(itexture); // create a new mask
                        destroy();
                        textureList.setEnabled(true);
                        collisionable.setEnabled(true);
                    }
                };
            }
        } else {
            if (itexture.getMask() != null) {
                itexture.setMask(null); // remove the mask
            }
        }
    }//GEN-LAST:event_collisionableItemStateChanged

    private void xyStartEndChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_xyStartEndChanged
        ITexture itexture = (ITexture) textureList.getSelectedValue();
        if (itexture != null) {
            int xs = new Integer(startXSpinner.getValue().toString());
            int xe = new Integer(endXSpinner.getValue().toString());
            int ys = new Integer(startYSpinner.getValue().toString());
            int ye = new Integer(endYSpinner.getValue().toString());
            int width = xe - xs;
            int height = ye - ys;
            itexture.setRegion(xs, ys, width > 0 ? width : 1, height > 0 ? height : 1);
            texturePreview.repaint();
        }


    }//GEN-LAST:event_xyStartEndChanged

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        alphaColorPoupUp.show(jButton4, 0, 0);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void fromRGBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromRGBActionPerformed
        final ITexture itexture = (ITexture) textureList.getSelectedValue();
        if (itexture != null) {

            final JColorChooser colorChooser = new JColorChooser();
            final JDialog dialog = new JDialog(this, true);
            dialog.getContentPane().setLayout(new FlowLayout());
            dialog.getContentPane().add(colorChooser);
            JButton btn = new JButton("OK");
            dialog.getContentPane().add(btn);
            btn.addActionListener(new ActionListener() {

                public void actionPerformed(ActionEvent e) {
                    dialog.dispose();
                }
            });
            //dialog.setSize(colorChooser.getPreferredSize());
            dialog.setSize((int) colorChooser.getPreferredSize().getWidth(), 470);
            dialog.setVisible(true);

            //colorChooser.getColor();
            dialog.addWindowListener(new WindowAdapter() {

                @Override
                public void windowClosed(WindowEvent e) {
                    Color color = colorChooser.getColor();
                    final int red = color.getRed();
                    final int green = color.getGreen();
                    final int blue = color.getBlue();
                    new Effect() {

                        @Override
                        public void create() {
                            ByteBuffer data = itexture.getData();
                            ImageUtils.makeTransp(data, red, green, blue, itexture.getWidthHW(), itexture.getHeightHW());
                            //data.rewind();
                            itexture.setData(data);
                            ((Texture) itexture).setUseAlphaChannel(true);
                            new Mask(itexture);// update the mask

                            //data = itexture.getData();
                            /*for (int i = 0; i < itexture.getWidthHW() * itexture.getHeightHW() * 4; i += 4) {
                            int r = data.get();
                            int g = data.get();
                            int b = data.get();
                            int a = data.get();
                            //System.out.println(r + " " + g + " " + b + " " + a);
                            }*/
                        }
                    };

                    super.windowClosing(e);
                }
            });
        }

    }//GEN-LAST:event_fromRGBActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        final ITexture itexture = (ITexture) textureList.getSelectedValue();
        if (itexture != null) {
            new Effect() {

                @Override
                public void create() {
                    itexture.destroy();
                    destroy();
                    initialize();
                }
            };
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        updateName();
    }//GEN-LAST:event_nameFieldActionPerformed

    private void updateName() {
        final ITexture itexture = (ITexture) textureList.getSelectedValue();
        if (itexture != null && itexture instanceof Texture) {
            String name = nameField.getText();
            if (name.equals("")) {
                return;
            }
            Texture txt = (Texture) itexture;
            txt.setName(name);
            initialize();
        }
    }

    private void nameFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_nameFieldPropertyChange
        updateName();
    }//GEN-LAST:event_nameFieldPropertyChange
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPopupMenu alphaColorPoupUp;
    private javax.swing.JButton applyButton;
    private javax.swing.JCheckBox collisionable;
    private javax.swing.JSpinner endXSpinner;
    private javax.swing.JSpinner endYSpinner;
    private javax.swing.JTextField filter;
    private javax.swing.JMenuItem fromClick;
    private javax.swing.JMenuItem fromRGB;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameField;
    private javax.swing.JButton selectTextureButton;
    private javax.swing.JSpinner startXSpinner;
    private javax.swing.JSpinner startYSpinner;
    private javax.swing.JList textureList;
    private org.easyway.ueditor2.forms.TexturePreview texturePreview;
    // End of variables declaration//GEN-END:variables
}
